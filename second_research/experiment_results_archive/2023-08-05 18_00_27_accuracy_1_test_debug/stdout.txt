~~~~~~~~~~ RANDOMIZED SEARCH CV ~~~~~~~~~~
Fitting 5 folds for each of 1 candidates, totalling 5 fits
Parameter choice num 0 / 0 - starting...
0 / 4 splits counted in cross val search 
fold's true y 
 [0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 1 1 1 1 1]
fold's predicted y
 [1 1 1 1 1 1 1 1 0 0 0 0 1 0 1 1 1 1 0 0 0 1 0]
scoring metric: accuracy, score: 0.391304347826087 
>>>
predicted correctly / predicted_in_total = 9 / 23
<<<
[CV 1/5] END classifier=RandomForestClassifier(random_state=42), classifier__n_jobs=-1;, score=0.391 total time=  20.2s
1 / 4 splits counted in cross val search 
fold's true y 
 [0 0 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1]
fold's predicted y
 [1 0 0 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 0]
scoring metric: accuracy, score: 0.7391304347826086 
>>>
predicted correctly / predicted_in_total = 17 / 23
<<<
[CV 2/5] END classifier=RandomForestClassifier(random_state=42), classifier__n_jobs=-1;, score=0.739 total time=   0.3s
2 / 4 splits counted in cross val search 
fold's true y 
 [0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0]
fold's predicted y
 [1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1]
scoring metric: accuracy, score: 0.36363636363636365 
>>>
predicted correctly / predicted_in_total = 8 / 22
<<<
[CV 3/5] END classifier=RandomForestClassifier(random_state=42), classifier__n_jobs=-1;, score=0.364 total time=   0.4s
3 / 4 splits counted in cross val search 
fold's true y 
 [1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0]
fold's predicted y
 [0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
scoring metric: accuracy, score: 0.45454545454545453 
>>>
predicted correctly / predicted_in_total = 10 / 22
<<<
[CV 4/5] END classifier=RandomForestClassifier(random_state=42), classifier__n_jobs=-1;, score=0.455 total time=   0.3s
4 / 4 splits counted in cross val search 
fold's true y 
 [1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 1 0 0 0 1 1 1]
fold's predicted y
 [1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0]
scoring metric: accuracy, score: 0.5454545454545454 
>>>
predicted correctly / predicted_in_total = 12 / 22
<<<
New improvement!
New best score is 0.4988142292490118
In parameter choice num 0 / 0 avg score was: 0.4988142292490118.
updating 2023-08-05 18_00_27_accuracy_1_test_debug\search_statistics.txt...
statistics file updated successfully with new improvement in score message!
Best parameter choice score by now is 0.4988142292490118
In parameter choice num 0 / 0 avg score was: 0.4988142292490118.
[CV 5/5] END classifier=RandomForestClassifier(random_state=42), classifier__n_jobs=-1;, score=0.545 total time=   0.3s
-----------------------
 New CV report 
-----------------------
* Classifier: 
 RandomForestClassifier(n_jobs=-1, random_state=42)
* User arguments: 
 {'rs': 42, 'X_version': 1, 'split_rows': 'normal', 'drop_out_correlated': False, 'age_under_50': False, 'debug': False, 'exhaustive_grid_search': False, 'classification_type': 'normal', 'scoring_method': 'accuracy', 'both': True, 'cv': 5, 'n_iter': 1, 'n_jobs': 1, 'use_gamma_columns': True, 'classification': True, 'lite_mode': True, 'test_size': 0.15, 'stdout_to_file': True, 'significant': False, 'output_folder_label': '_accuracy_1_test_debug'}
* Pipeline details: 
 Pipeline(steps=[('scaler', StandardScaler()),
                ('classifier',
                 RandomForestClassifier(n_jobs=-1, random_state=42))])
* Best Hyperparametes picked in cross validation: (cv's best score): 
 {'classifier__n_jobs': -1, 'classifier': RandomForestClassifier(n_jobs=-1, random_state=42)}
* Scorer_used: accuracy
* CV Score (cv's best score for best hyperparametes): 0.499 +/- 0.135 (see score func in hyperparams)  

* Confusion matrix: 
 [[44  0]
 [ 0 68]]
[[TN FP
[FN TP]]
* Response rate:  0.6071428571428571
* CV Precision:  1.0
* CV Recall:  1.0
* CV Accuracy:  1.0
* CV F1:  1.0
train CV report saved to   2023-08-05 18_00_27_accuracy_1_test_debug\tuning.csv
-----------------------
 End of CV report 
----------------------- 



* Confusion matrix: 
 [[1 7]
 [5 7]]
[[TN FP
[FN TP]]
* CV Precision:  0.5
* CV Recall:  0.5833333333333334
* CV Accuracy:  0.4
* CV F1:  0.5384615384615384
-----------------------
 End of CV report 
----------------------- 



<<<<<<<<<<<<<<<<<<<<< GSCVrunner.py finished successfuly<<<<<<<<<<<<<<<<<<<<<
