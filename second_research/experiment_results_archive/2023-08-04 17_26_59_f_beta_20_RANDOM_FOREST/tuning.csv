date,classifier,pipe_named_steps,best_params,selected_features,user_inputs,responders_rate,X_train_size(num of rows in cv input df),scorer_used,scorer_score_mean,scorer_score_std,accuracy,precision,recall,f1,confusion_matrix,param_grid_searched_at
2023-08-04,"RandomForestClassifier(max_depth=100, max_features='log2', n_estimators=500,
                       n_jobs=-1, random_state=42)","{'scaler': StandardScaler(), 'smote': SMOTE(random_state=42, sampling_strategy='minority'), 'kBest': SelectKBest(), 'classifier': RandomForestClassifier(max_depth=100, max_features='log2', n_estimators=500,
                       n_jobs=-1, random_state=42)}","{'kBest__k': 50, 'classifier__n_jobs': -1, 'classifier__n_estimators': 500, 'classifier__max_features': 'log2', 'classifier__max_depth': 100, 'classifier': RandomForestClassifier(max_depth=100, max_features='log2', n_estimators=500,
                       n_jobs=-1, random_state=42)}","['Ratio_Relative_Power_Norm_Beta1 Over Beta2_F7', 'Ratio_Relative_Power_Norm_Beta1 Over Beta2_F8', 'Ratio_Relative_Power_Norm_Beta1 Over Beta2_Fpz', 'Ratio_Relative_Power_Norm_Delta Over Beta1_C1', 'Ratio_Relative_Power_Norm_Delta Over Beta1_C2', 'Ratio_Relative_Power_Norm_Delta Over Beta1_C3', 'Ratio_Relative_Power_Norm_Delta Over Beta1_C4', 'Ratio_Relative_Power_Norm_Delta Over Beta1_C5', 'Ratio_Relative_Power_Norm_Delta Over Beta1_C6', 'Ratio_Relative_Power_Norm_Delta Over Beta1_CP1', 'Ratio_Relative_Power_Norm_Delta Over Beta1_CP2', 'Ratio_Relative_Power_Norm_Delta Over Beta1_CP3', 'Ratio_Relative_Power_Norm_Delta Over Beta1_CP4', 'Ratio_Relative_Power_Norm_Delta Over Beta1_CP5', 'Ratio_Relative_Power_Norm_Delta Over Beta1_CP6', 'Ratio_Relative_Power_Norm_Delta Over Beta1_CPz', 'Ratio_Relative_Power_Norm_Delta Over Beta1_Cz', 'Ratio_Relative_Power_Norm_Delta Over Beta1_F1', 'Ratio_Relative_Power_Norm_Delta Over Beta1_F2', 'Ratio_Relative_Power_Norm_Delta Over Beta1_F4', 'Ratio_Relative_Power_Norm_Delta Over Beta1_FC1', 'Ratio_Relative_Power_Norm_Delta Over Beta1_FC4', 'Ratio_Relative_Power_Norm_Delta Over Beta1_FC6', 'Ratio_Relative_Power_Norm_Delta Over Beta1_FCz', 'Ratio_Relative_Power_Norm_Delta Over Beta1_Fz', 'Ratio_Relative_Power_Norm_Delta Over Beta1_O2', 'Ratio_Relative_Power_Norm_Delta Over Beta1_P1', 'Ratio_Relative_Power_Norm_Delta Over Beta1_P10', 'Ratio_Relative_Power_Norm_Delta Over Beta1_P2', 'Ratio_Relative_Power_Norm_Delta Over Beta1_P5', 'Ratio_Relative_Power_Norm_Delta Over Beta1_P6', 'Ratio_Relative_Power_Norm_Delta Over Beta1_P7', 'Ratio_Relative_Power_Norm_Delta Over Beta1_P8', 'Ratio_Relative_Power_Norm_Delta Over Beta1_P9', 'Ratio_Relative_Power_Norm_Delta Over Beta1_PO4', 'Ratio_Relative_Power_Norm_Delta Over Beta1_PO7', 'Ratio_Relative_Power_Norm_Delta Over Beta1_PO8', 'Ratio_Relative_Power_Norm_Delta Over Beta1_Pz', 'Ratio_Relative_Power_Norm_Delta Over Beta1_TP7', 'Ratio_Relative_Power_Norm_Delta Over Beta1_TP8', 'Ratio_Relative_Power_Norm_Delta Over Beta2_CP2', 'Ratio_Relative_Power_Norm_Delta Over Beta2_CPz', 'Ratio_Relative_Power_Norm_Delta Over Beta2_O2', 'Ratio_Relative_Power_Norm_Delta Over Beta2_P1', 'Ratio_Relative_Power_Norm_Delta Over Beta2_P10', 'Ratio_Relative_Power_Norm_Delta Over Beta2_P2', 'Ratio_Relative_Power_Norm_Delta Over Beta2_P8', 'Ratio_Relative_Power_Norm_Delta Over Beta2_PO8', 'Ratio_Relative_Power_Norm_Delta Over Beta2_Pz', 'Ratio_Relative_Power_Norm_Delta Over Beta2_TP8']","{'rs': 42, 'X_version': 1, 'split_rows': 'normal', 'drop_out_correlated': False, 'age_under_50': False, 'debug': False, 'exhaustive_grid_search': False, 'classification_type': 'normal', 'scoring_method': 'f_beta', 'both': True, 'cv': 5, 'n_iter': 20, 'n_jobs': 1, 'use_gamma_columns': True, 'classification': True, 'lite_mode': True, 'test_size': 0.15, 'stdout_to_file': False, 'significant': False, 'output_folder_label': '_f_beta_20_RANDOM_FOREST', 'beta': 0.5}",0.6071428571428571,112,f_beta,0.5513575518183813,0.10004091815771195,1.0,1.0,1.0,1.0,"[[44  0]
 [ 0 68]]
[[TN FP
[FN TP]]","{'kBest__k': [50], 'classifier__n_estimators': [500], 'classifier__n_jobs': [-1], 'classifier__max_depth': [100], 'classifier__max_features': ['sqrt', 'log2'], 'classifier': [RandomForestClassifier(max_depth=100, max_features='log2', n_estimators=500,
                       n_jobs=-1, random_state=42)]}"
