~~~~~~~~~~ RANDOMIZED SEARCH CV ~~~~~~~~~~
Fitting 5 folds for each of 1 candidates, totalling 5 fits
Parameter choice num 0 / 9 - starting...
0 / 49 splits counted in cross val search 
fold's true y 
 [0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 1 1 1 1 1]
fold's predicted y
 [0 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 1 1]
scoring metric: precision, score: 0.7272727272727273 
>>>
predicted correctly / predicted_in_total = 14 / 23
<<<
[CV 1/5] END classifier=MLPClassifier(random_state=42);, score=0.727 total time=   2.1s
1 / 49 splits counted in cross val search 
fold's true y 
 [0 0 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1]
fold's predicted y
 [1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0]
scoring metric: precision, score: 0.625 
>>>
predicted correctly / predicted_in_total = 13 / 23
<<<
[CV 2/5] END classifier=MLPClassifier(random_state=42);, score=0.625 total time=   2.0s
2 / 49 splits counted in cross val search 
fold's true y 
 [0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0]
fold's predicted y
 [0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1]
scoring metric: precision, score: 0.5384615384615384 
>>>
predicted correctly / predicted_in_total = 10 / 22
<<<
[CV 3/5] END classifier=MLPClassifier(random_state=42);, score=0.538 total time=   3.5s
3 / 49 splits counted in cross val search 
fold's true y 
 [1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0]
fold's predicted y
 [0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1]
scoring metric: precision, score: 0.4375 
>>>
predicted correctly / predicted_in_total = 7 / 22
<<<
[CV 4/5] END classifier=MLPClassifier(random_state=42);, score=0.438 total time=  18.9s
4 / 49 splits counted in cross val search 
fold's true y 
 [1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 1 0 0 0 1 1 1]
fold's predicted y
 [1 1 1 0 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 1]
scoring metric: precision, score: 0.6666666666666666 
>>>
predicted correctly / predicted_in_total = 12 / 22
<<<
New improvement!
New best score is 0.5989801864801865
In parameter choice num 0 / 9 avg score was: 0.5989801864801865.
updating 2023-08-06 12_58_55_precision_10_MLP_VANILA\search_statistics.txt...
statistics file updated successfully with new improvement in score message!
Best parameter choice score by now is 0.5989801864801865
In parameter choice num 0 / 9 avg score was: 0.5989801864801865.
[CV 5/5] END classifier=MLPClassifier(random_state=42);, score=0.667 total time=   4.9s
Fitting 5 folds for each of 1 candidates, totalling 5 fits
Parameter choice num 1 / 9 - starting...
5 / 49 splits counted in cross val search 
fold's true y 
 [0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 1 1 1 1 1]
fold's predicted y
 [0 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 1 1]
scoring metric: precision, score: 0.7272727272727273 
>>>
predicted correctly / predicted_in_total = 14 / 23
<<<
[CV 1/5] END classifier=MLPClassifier(random_state=42);, score=0.727 total time=   2.4s
6 / 49 splits counted in cross val search 
fold's true y 
 [0 0 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1]
fold's predicted y
 [1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0]
scoring metric: precision, score: 0.625 
>>>
predicted correctly / predicted_in_total = 13 / 23
<<<
[CV 2/5] END classifier=MLPClassifier(random_state=42);, score=0.625 total time=   7.5s
7 / 49 splits counted in cross val search 
fold's true y 
 [0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0]
fold's predicted y
 [0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1]
scoring metric: precision, score: 0.5384615384615384 
>>>
predicted correctly / predicted_in_total = 10 / 22
<<<
[CV 3/5] END classifier=MLPClassifier(random_state=42);, score=0.538 total time=   2.9s
8 / 49 splits counted in cross val search 
fold's true y 
 [1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0]
fold's predicted y
 [0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1]
scoring metric: precision, score: 0.4375 
>>>
predicted correctly / predicted_in_total = 7 / 22
<<<
[CV 4/5] END classifier=MLPClassifier(random_state=42);, score=0.438 total time=   2.7s
9 / 49 splits counted in cross val search 
fold's true y 
 [1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 1 0 0 0 1 1 1]
fold's predicted y
 [1 1 1 0 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 1]
scoring metric: precision, score: 0.6666666666666666 
>>>
predicted correctly / predicted_in_total = 12 / 22
<<<
Best parameter choice score by now is 0.5989801864801865
In parameter choice num 1 / 9 avg score was: 0.5989801864801865.
[CV 5/5] END classifier=MLPClassifier(random_state=42);, score=0.667 total time=   1.9s
-----------------------
 New cv report 
-----------------------
* Classifier: 
 MLPClassifier(random_state=42)
* User arguments: 
 {'rs': 42, 'X_version': 1, 'split_rows': 'normal', 'drop_out_correlated': False, 'age_under_50': False, 'debug': False, 'exhaustive_grid_search': False, 'classification_type': 'normal', 'scoring_method': 'precision', 'both': True, 'cv': 5, 'n_iter': 10, 'n_jobs': 1, 'use_gamma_columns': True, 'classification': True, 'lite_mode': True, 'test_size': 0.15, 'stdout_to_file': True, 'significant': False, 'output_folder_label': '_precision_10_MLP_VANILA', 'beta': 0.5}
* Pipeline details: 
 Pipeline(steps=[('scaler', StandardScaler()),
                ('classifier', MLPClassifier(random_state=42))])
* Best Hyperparametes picked in cross validation: (cv's best score): 
 {'classifier': MLPClassifier(random_state=42)}
* Scorer_used: precision
* CV mean_test_score precision ( over 5 folds - (cv's best score for best hyperparametes): 0.599 +/- 0.101 (see score func in hyperparams)  

* Confusion matrix: 
 [[16 28]
 [28 40]]
[[TN FP
[FN TP]]
* Response rate:  0.6071428571428571
* Precision:  0.5882352941176471
* Recall:  0.5882352941176471
* Accuracy:  0.5
* F1:  0.5882352941176471
* F-Beta (beta = 0.5):  0.5882352941176471
train CV report saved to   2023-08-06 12_58_55_precision_10_MLP_VANILA\tuning.csv
-----------------------
 End of cv report 
----------------------- 



* Confusion matrix: 
 [[44  0]
 [ 0 68]]
[[TN FP
[FN TP]]
* Precision:  1.0
* Recall:  1.0
* Accuracy:  1.0
* F1:  1.0
* F-Beta (beta = 0.5):  1.0
-----------------------
 End of train report 
----------------------- 



* Confusion matrix: 
 [[2 6]
 [4 8]]
[[TN FP
[FN TP]]
* Precision:  0.5714285714285714
* Recall:  0.6666666666666666
* Accuracy:  0.5
* F1:  0.6153846153846153
* F-Beta (beta = 0.5):  0.588235294117647
-----------------------
 End of test report 
----------------------- 



<<<<<<<<<<<<<<<<<<<<< GSCVrunner.py finished successfuly<<<<<<<<<<<<<<<<<<<<<
